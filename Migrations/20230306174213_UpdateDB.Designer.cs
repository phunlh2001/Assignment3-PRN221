// <auto-generated />
using Assignment3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230306174213_UpdateDB")]
    partial class UpdateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment3.Models.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AuthorID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "HCM",
                            Email = "admin@gmail.com",
                            FullName = "admin",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_date");

                    b.Property<int?>("PublishStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_date");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AuthorID = 1,
                            CategoryID = 4,
                            CreatedDate = "07/03/2023",
                            PublishStatus = 0,
                            Title = "OOP Concepts in C#",
                            UpdatedDate = "07/03/2023"
                        },
                        new
                        {
                            ID = 2,
                            AuthorID = 1,
                            CategoryID = 2,
                            CreatedDate = "07/03/2023",
                            PublishStatus = 0,
                            Title = "50 Good Dishes For Breakfast",
                            UpdatedDate = "07/03/2023"
                        },
                        new
                        {
                            ID = 3,
                            AuthorID = 1,
                            CategoryID = 3,
                            CreatedDate = "07/03/2023",
                            PublishStatus = 0,
                            Title = "NASA And The Great Scientific Work",
                            UpdatedDate = "07/03/2023"
                        },
                        new
                        {
                            ID = 4,
                            AuthorID = 1,
                            CategoryID = 1,
                            CreatedDate = "07/03/2023",
                            PublishStatus = 0,
                            Title = "The Story Of Studying Abroad",
                            UpdatedDate = "07/03/2023"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.PostCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Education",
                            Description = "Education..."
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Healthcare",
                            Description = "Healthcare..."
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Science",
                            Description = "Science..."
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Technology",
                            Description = "Technology..."
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Post", b =>
                {
                    b.HasOne("Assignment3.Models.AppUser", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment3.Models.PostCategory", "PostCategory")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("PostCategory");
                });

            modelBuilder.Entity("Assignment3.Models.AppUser", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Assignment3.Models.PostCategory", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
